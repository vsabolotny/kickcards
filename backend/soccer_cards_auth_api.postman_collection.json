{
    "info": {
        "_postman_id": "YOUR_AUTH_COLLECTION_ID",
        "name": "Soccer Cards Auth API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Register User",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{baseUrl}}/register",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "register"
                    ]
                },
                "description": "Register a new user."
            },
            "response": []
        },
        {
            "name": "Login User",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{baseUrl}}/login",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "login"
                    ]
                },
                "description": "Login an existing user to get an access token."
            },
            "response": []
        },
        {
            "name": "Protected Route",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer YOUR_ACCESS_TOKEN",
                        "type": "text",
                        "description": "Replace YOUR_ACCESS_TOKEN with the token obtained from login."
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/protected",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "protected"
                    ]
                },
                "description": "Access a protected route. Requires a JWT access token in the Authorization header (Bearer token)."
            },
            "response": []
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://127.0.0.1:5000",
            "type": "string",
            "description": "Base URL of your Flask application"
        }
    ],
    "event": [
        {
            "listen": "test",
            "script": {
                "exec": [
                    "pm.test(\"Status code is 200 or 201 for successful auth operations\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                    "});",
                    "",
                    "// Example: Capture access token from login response and set it as a collection variable",
                    "if (pm.request.url.getPath() === '/login' && pm.response.code === 200) {",
                    "    try {",
                    "        const responseJson = pm.response.json();",
                    "        if (responseJson.access_token) {",
                    "            pm.collectionVariables.set(\"accessToken\", responseJson.access_token);",
                    "            console.log('Access token captured:', responseJson.access_token);",
                    "        }",
                    "    } catch (e) {",
                    "        console.log('Error parsing login response or finding token:', e);",
                    "    }",
                    "}"
                ],
                "type": "text/javascript"
            }
        }
    ]
}